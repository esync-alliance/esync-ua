include(FindPkgConfig)

# Checking openssl
include(FindOpenSSL)

# Checking libxml2
include(FindLibXml2)
include_directories(SYSTEM ${LIBXML2_INCLUDE_DIR})

# Checking libzip
include(FindLibZip.cmake)

# Checking json-c
if(NOT JSON_C)
    set(JSON_C ${CMAKE_SOURCE_DIR}/json-c-build)
endif()

set(JSON_C_LIB ${JSON_C}/.libs/libjson-c.a)
if (NOT EXISTS ${JSON_C_LIB})
    message(FATAL_ERROR "You must build json-c sources first!")
endif()

if(XL4BUS_DIR)
# Checking libxl4bus
    set(XL4BUS_LIB ${XL4BUS_DIR}/libxl4bus.so)
    if (NOT EXISTS ${XL4BUS_LIB})
        message(FATAL_ERROR "You must build libxl4bus sources first!")
    endif()
include_directories(SYSTEM ${XL4BUS_DIR}/../src/include)
include_directories(SYSTEM ${XL4BUS_DIR}/include)
else()
set(XL4BUS_LIB -lxl4bus)
endif()

# Set include path
include_directories(SYSTEM ${JSON_C})
include_directories(SYSTEM ${CMAKE_SOURCE_DIR}/src/include)
include_directories(${CMAKE_SOURCE_DIR}/src)
include_directories(${CMAKE_BINARY_DIR})

# Set linker flags
set(COMMON_DEPS ${XL4BUS_LIB} -Wl,-Bdynamic ${LIBZIP_LIBRARY} -lxml2 -lssl -lcrypto -lm -lz)
set(SHARED_DEPS ${JSON_C_LIB} ${COMMON_DEPS})
set(APP_DEPS ${JSON_C_LIB} ${COMMON_DEPS})
