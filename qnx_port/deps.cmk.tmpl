# Checking libxml2
if ("${CMAKE_SYSTEM_VERSION}" STREQUAL "6.6.0")
    set(LIBXML2 ${CMAKE_SOURCE_DIR}/libxml2-build)
    set(LIBXML2_LIB ${LIBXML2}/.libs/libxml2.so)
    if (NOT EXISTS ${LIBXML2_LIB})
        message(FATAL_ERROR "You must build libxml2 sources first!")
    endif()
else()
    set(LIBXML2_LIB "-lxml2")
endif()

# Checking libzip
set(LIBZIP ${CMAKE_SOURCE_DIR}/libzip-build)
set(LIBZIP_LIB ${LIBZIP}/build/lib/libzip.so)
if (NOT EXISTS ${LIBZIP_LIB})
    message(FATAL_ERROR "You must build libzip sources first!")
endif()

# Checking json-c
set(JSON_C_LIB ${CMAKE_SOURCE_DIR}/json-c-build/.libs/libjson-c.a)
if (NOT EXISTS ${JSON_C_LIB})
    message(FATAL_ERROR "You must build json-c sources first!")
endif()

# Checking jansson
set(JANSSON ${XL4BUS_DIR}/../jansson-build)
set(JANSSON_LIB ${JANSSON}/build/lib/libjansson.so)
if (NOT EXISTS ${JANSSON_LIB})
    message(FATAL_ERROR "You must build jansson sources first!")
endif()

# Checking libxl4bus
set(XL4BUS_LIB ${XL4BUS_DIR}/libxl4bus.so)
if (NOT EXISTS ${XL4BUS_LIB})
    message(FATAL_ERROR "You must build libxl4bus sources first!")
endif()

# Checking dmclient
if (SUPPORT_UA_DOWNLOAD)
include_directories(SYSTEM ${DMCLIENT_DIR}/include)
set(DMCLIENT_LIB ${DMCLIENT_DIR}/build/libdmclient.so)
    if (NOT EXISTS ${DMCLIENT_LIB})
        message(WARNING "Not found libdmclient.so in build folder , You should build libdmclient sources first!")
        set(DMCLIENT_LIB -ldmclient)
    endif()
set(CURL_LIB -lcurl)
endif()

# Set include path
include_directories(SYSTEM ${QNX_TARGET}/usr/include/io-pkt)
include_directories(SYSTEM ${CMAKE_SOURCE_DIR}/json-c-build)
include_directories(SYSTEM ${JANSSON}/build/include)
include_directories(SYSTEM ${XL4BUS_DIR}/../src/include)
include_directories(SYSTEM ${XL4BUS_DIR}/include)
include_directories(SYSTEM ${LIBZIP}/build)
include_directories(SYSTEM ${LIBZIP}/lib)
if ("${CMAKE_SYSTEM_VERSION}" STREQUAL "6.6.0")
    include_directories(SYSTEM ${LIBXML2})
    include_directories(SYSTEM ${LIBXML2}/include)
endif()
include_directories(${CMAKE_BINARY_DIR})
include_directories(${CMAKE_SOURCE_DIR}/src)
include_directories(SYSTEM ${CMAKE_SOURCE_DIR}/src/include)
include_directories(SYSTEM ${CMAKE_SOURCE_DIR}/qnx_port/source)

# Set linker flags
set(COMMON_DEPS ${XL4BUS_LIB} ${DMCLIENT_LIB} ${CURL_LIB} ${JANSSON_LIB} ${LIBZIP_LIB} ${LIBXML2_LIB} -Wl,-Bdynamic -lsocket -lssl -lcrypto -lm -lz)
set(SHARED_DEPS ${JSON_C_LIB} ${COMMON_DEPS})
set(APP_DEPS ${JSON_C_LIB} ${COMMON_DEPS})

